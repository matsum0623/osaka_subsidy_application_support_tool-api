const { core } = require('./core')

module.exports = {
  get_item: async (after_school_id, date) => {
    const response = await core.query('PK = :p_key AND SK = :s_key', {
      ':p_key': 'AFTER_SCHOOL#' +  after_school_id,
      ':s_key': 'DAILY#' + date,
    })
    return (response.Items && response.Items.length > 0) ? response.Items[0] : {}
  },
  get_list: async (after_school_id, like_str) => {
    const response = await core.query('PK = :p_key AND begins_with(SK, :s_key)', {
      ':p_key': 'AFTER_SCHOOL#' +  after_school_id,
      ':s_key': 'DAILY#' + like_str,
    })
    return response.Items
  },
  get_list_between: async (after_school_id, start_date, end_date) => {
    const response = await core.query('PK = :p_key AND SK BETWEEN :sk_start AND :sk_end', {
      ':p_key': `AFTER_SCHOOL#${after_school_id}`,
      ':sk_start': `DAILY#${start_date}`,
      ':sk_end': `DAILY#${end_date}`,
    })
    return response.Items
  },
  put: async (after_school_id, date, open_type, open_time, children, disability, medical_care, open_instructor, close_instructor, details, instructor_check) => {
    return await core.put({
      PK: 'AFTER_SCHOOL#' +  after_school_id,
      SK: 'DAILY#' +  date,
      OpenType: open_type,
      OpenTime: open_time,
      Children: children,
      Disability: disability,
      MedicalCare: medical_care,
      OpenInstructor: open_instructor,
      CloseInstructor: close_instructor,
      Details: details,
      InstructorCheck: instructor_check,
    })
  }
}

